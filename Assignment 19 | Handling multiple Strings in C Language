1.  // Write a program to find the number of vowels in each of the 5 strings stored in two dimensional arrays, taken from the user.
    #include <stdio.h>
    #include<string.h>
    int main()
    {
        char str[5][20],vowels[10]={'a','e','i','o','u','A','E','I','O','U'};
        printf("Enter five strings:");
        for (int i = 0; i < 5; i++)
        {
            fgets(str[i],20,stdin);
        }
        for (int i = 0; i < 5; i++)
        {
            printf("\n%s =",str[i]);
            for(int j=0;str[i][j];j++)
            {
                for (int k = 0; k < 10; k++)
                {
                    if(str[i][j]==vowels[k])
                    printf("%c",vowels[k]);
                }
            }
        }
    }

2.  // Write a program to sort 10 city names stored in two dimensional arrays, taken from the user.
    #include <stdio.h>
    #include<string.h>
    int main()
    {
        char str[10][20],temp[20];
        printf("Enter ten city names:");
        for (int i = 0; i < 10; i++)
        {
            fgets(str[i],20,stdin);
        }
        for (int i = 0; i < 10; i++)
        {
            for (int j = i; j < 10; j++)
            {
                if (strcmp(str[i],str[j])<0)
                {
                    strcpy(temp,str[i]);
                    strcpy(str[i],str[j]);
                    strcpy(str[j],temp);
                }
            }       
        }
        for (int i = 0; i < 10; i++)
        {
        printf("%s ",str[i]);
        }
    }

3.  // Write a program to read and display a 2D array of strings in C language.
    #include <stdio.h>
    int main()
    {
        char str[10][20],temp[20];
        printf("Enter ten city names:");
        for (int i = 0; i < 10; i++)
        {
            fgets(str[i],20,stdin);
        }
        for (int i = 0; i < 10; i++)
        {
        printf("%s ",str[i]);
        }
    }

4.  // Write a program to search a string in the list of strings.
    #include <stdio.h>
    #include<string.h>
    int main()
    {
        char str[10][20]={"bamboo","sandwa","bidasar","jaipur","bikaner","jodhapur","ajmer","nokha","bhopal","bangluru"},temp[20];
        int count=0;
        printf("Enter ten city names:");
        fgets(temp,20,stdin);  

        for (int i = 0; i < 10; i++)
        {
            if (strcmp(temp,str[i])==0)
            count++;
        }
        if (count)
        {
            printf("your city is avalable in list.");
        }
        else
        printf("your city is avalable in list.");
        return 0;
    }

5.  // Suppose we have a list of email addresses, check whether all email addresses have ‘@’ in it. Print the odd email out.
    #include <stdio.h>
    #include<string.h>
    int main()
    {
        char str[10][20]={"manoj@gmail.com","krishan@gmail.com","hari@gmail.com","viki#gmail.com","manoj@gmail.com","krishan@gmail.com","hari@gmail.com","radhai#gmail.com","manoj@gmail.com","krishan@gmail.com"};
        int count;
        

        for (int i = 0; i < 10; i++)
        {
            count=0;
            for (int j = 0; j < 20; j++)
            {
                if (str[i][j]=='@')
                {
                count++;
                }
            }
            if(count==0)
            {
                printf("%s \n",str[i]);
            }
        }
        return 0;
    }

6.  // Write a program to print the strings which are palindrome in the list of strings.
    #include <stdio.h>
    #include<string.h>
    int main()
    {
        char str[10][20]={"manoj","level","rohit","komal","MysirG","sorbh","connoc","loudduol","partiksir","navinnegi"},temp[20];
        int count;
        for (int i = 0; i < 10; i++)
        {
            strcpy(temp, str[i]);

            if(strcmp(temp,strrev(str[i]))==0)
            {
                printf("%s ",temp);
            }
        }
        return 0;
    }

7.  // From the list of IP addresses, check whether all ip addresses are valid.
    #include<stdio.h>
    #include<string.h>
    int main()
    {
        char ipAdd[5][15]={"190.225.145.3","190.225.145.3","190.225.145.3","190.225.145.3","253.198.654.124"},check[15]={"225.225.225.225"};
        for (int i = 0; i < 5; i++)
        {
            if(strcmp(ipAdd[i],check)>0)
            printf("This ip  is not valid is :%s \n",ipAdd[i]);
        }
        return 0;
    }

8.  // Given a list of words followed by two words, the task is to find the minimum distance between the given two words in the list of words. (Example : s = {“the”,”quick”,”brown”,”fox”,”quick”} word1 = “the”, word2 = “fox”, OUTPUT : 1 )
    #include <stdio.h>
    #include <string.h>
    int findDistance(char (*ptr)[10],char *word1,char *word2)
    {
        int k,j;
        for (int i = 0; i < 5; i++)
        {

            if (strcmp(ptr[i],word1)==0)
            {
                k=i+1;
            }
            if (strcmp(ptr[i],word2)==0)
            {
                j=i+1;
            }

        }
        return j-(k+1)<5-j+(k-1)?j-(k+1):5-j+(k-1);
    }
    int main()
    {
        char list[5][10]={"the","quick","brown","fox","quick"};
        char word1[10]="the",word2[10]="fox";
        printf("The minimum distance between the given two words in the list of words : %d \n",findDistance(list,word1,word2));
        return 0;
    }

9.  // Write a program that asks the user to enter a username. If the username entered is one of the names in the list then the user is allowed to calculate the factorial of a number. Otherwise, an error message is displayed
    #include<stdio.h>
    #include<string.h>
    int factorial(int input)
    {
        int s;
        if (input==0||input==1)
        return 1;
        s=input*factorial(input-1);
        return s;
    }
    int main()
    {
        int input;
        char userNameList[3][10]={"Manoj0","krishan","sharda"},userName[10];
        printf("Enter your Username to prosied:");
        gets(userName);
        printf("%d",strcmp(userName,userNameList[0]));
        for (int i = 0; i < 3; i++)
        {
            if (!(strcmp(userName,userNameList[i])))
            {
                printf("You are allowed to calculate the factorial of a number.\n Enter a Number :");
                scanf("%d",&input);
                printf("Factorial is %d\n",factorial(input));
                break;
            }
            else
            printf("You are not a athorisied user Enter a valid username ");
        }
        return 0;
    }

10. // Create an authentication system. It should be menu driven.
    #include<stdio.h>
    #include<string.h>
    #include<stdlib.h>
    int factorial(int input)
    {
        int s;
        if (input==0||input==1)
        return 1;
        s=input*factorial(input-1);
        return s;
    }
    int main()
    {
        char userName[5][2][10]={{"Manoj","Manoj@12"},{"krishan","kjyani@12"},{"vikash","viki@12"},{"birbal","774293"},{"shyopat","779693"}};
        char inputUserName[10],passward[10];
        int choise,input;
        while (1)
        {
            printf("Welcome to the Manoj Jyani authentiction system.\n");
            printf("###################################################\n");
            printf("1. log In \n");
            printf("2. exit  \n");
            printf("Enter your choise : \n");
            scanf("%d",&choise);
            fflush(stdin);
            switch (choise)
            {
            case 1:
                {
                    printf("Enter your Username :");
                    gets(inputUserName);
                    for (int i = 0; i < 5; i++)
                    {
                        if (!(strcmp(inputUserName,userName[i][0])))
                        {
                            printf("Enter your Passward : \n");
                            gets(passward);
                            if (!(strcmp(passward,userName[i][1])))
                            {
                                printf("You are log in successfully.\n");
                                printf("Enter a number to calculate factorial :");
                                scanf("%d",&input);
                                printf("factorial of %d is %d",input,factorial(input));
                                break;
                            }
                            else
                            {
                                printf("error : plese enter a valid passward.\n");
                            }
                        }
                    }
                }
            case 2:exit(0);
            }
            break;
        }
    }
